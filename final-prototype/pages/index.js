import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import Step1 from "../src/Step1";
import Step2 from "../src/Step2";
import Step3 from "../src/Step3";
import Step4 from "../src/Step4";
import Step5 from "../src/Step5";

export default function Home() {

  //Keeping track of the Step the user is on.
  const [stepCount,setStepCount] = useState(1);
  const nextStep = () => {
    if(stepCount == 5)
    {
      setStepCount(1);
    }
    else {
    setStepCount(stepCount + 1);
    }
  };
  const previousStep = () => {
    if(stepCount == 1)
    {
        //don't do anything
    }
    else {
    setStepCount(stepCount - 1);
    }
  };

  //Text input by user.
  const [inputtedText,setInputtedText] = useState("");
  const updateTextFunc = (txt) => {
    setInputtedText(txt);
  };

  //Selected Voice by user.
  const [selectedVoice,setSelectedVoice] = useState("");
  const updateVoiceFunc = (driver) => {
    setSelectedVoice(driver);
  };

    //Selected Platforms by user.
    const [selectedPlatforms,setSelectedPlatforms] = useState([]);
    const updatePlatformsFunc = (pltf) => {
      setSelectedPlatforms(pltf);
    };
  



  return (
    <>
      <Head>
        <title>Racingnews Tacotron</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {stepCount == 1 ? <Step1 nextStepFunc={nextStep} updateTextFunc={updateTextFunc} text={inputtedText}/> : <></>}
      {stepCount == 2 ? <Step2 nextStepFunc={nextStep} previousStepFunc={previousStep} updateVoiceFunc={updateVoiceFunc} voice={selectedVoice} /> : <></>}
      {stepCount == 3 ? <Step3 nextStepFunc={nextStep} previousStepFunc={previousStep} voice={selectedVoice} text={inputtedText} /> : <></>}
      {stepCount == 4 ? <Step4 nextStepFunc={nextStep} previousStepFunc={previousStep} updatePlatformsFunc={updatePlatformsFunc} platforms={selectedPlatforms}/> : <></>}
      {stepCount == 5 ? <Step5 nextStepFunc={nextStep} previousStepFunc={previousStep} /> : <></>}

    </>
  )
}
