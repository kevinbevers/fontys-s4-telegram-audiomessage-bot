import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import Step1 from "../src/Step1";
import Step2 from "../src/Step2";
import Step3 from "../src/Step3";
import Step4 from "../src/Step4";
import Step5 from "../src/Step5";
import Step6 from "../src/Step6";

export default function Home() {

  //Keeping track of the Step the user is on.
  const [stepCount,setStepCount] = useState(1);
  const nextStep = () => {
    if(stepCount == 6)
    {
      //reset data
      setInputtedText("");
      setSelectedVoice("");
      setSelectedPlatforms([]);
      setFileName("");
      setInputtedTitle("");
      setNotiSound(true);
      setDistortion(false);
      setBackgroundVolume(15);
      setBackgroundType("RB16BengineOnboard.mp3");
      setBackgroundTiming("whole");
      //back to first step
      setStepCount(1);
    }
    else {
    setStepCount(stepCount + 1);
    }
  };
  const previousStep = () => {
    if(stepCount == 1)
    {
        //don't do anything
    }
    else {
    setStepCount(stepCount - 1);
    }
  };

  //Title input by user.
  const [inputtedTitle,setInputtedTitle] = useState("");
  const updateTitleFunc = (txt) => {
    setInputtedTitle(txt);
  };

  //Text input by user.
  const [inputtedText,setInputtedText] = useState("");
  const updateTextFunc = (txt) => {
    setInputtedText(txt);
  };

  //backgroundVolume input by user.
  const [backgroundVolume,setBackgroundVolume] = useState(15);
  const updateBackgroundVolume = (vol) => {
    setBackgroundVolume(vol);
  };

  //backgroundTiming input by user.
  const [backgroundTiming,setBackgroundTiming] = useState("whole");
  const updateBackgroundTiming = (val) => {
    setBackgroundTiming(val);
  };

  //notiSoundToggle input by user.
  const [notiSound, setNotiSound] = useState(true);
  const updateNotiSound = (val) => {
    setNotiSound(val);
  };

  //distortionToggle input by user.
  const [distortion, setDistortion] = useState(false);
  const updateDistortion = (val) => {
    setDistortion(val);
  };

  //distortionToggle input by user.
  const [backgroundType, setBackgroundType] = useState("RB16BengineOnboard.mp3");
  const updateBackgroundType = (val) => {
    setBackgroundType(val);
  };

  //Selected Voice by user.
  const [selectedVoice,setSelectedVoice] = useState("");
  const updateVoiceFunc = (driver) => {
    setSelectedVoice(driver);
  };

  //Selected Platforms by user.
  const [selectedPlatforms,setSelectedPlatforms] = useState([]);
  const updatePlatformsFunc = (pltf) => {
    setSelectedPlatforms(pltf);
  };

  //fileName
  const [fileName,setFileName] = useState("");
  const updateFileNameFunc = (fn) => {
    setFileName(fn);
  };
  



  return (
    <>
      <Head>
        <title>Racingnews Tacotron</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {stepCount == 1 ? <Step1 nextStepFunc={nextStep} updateTextFunc={updateTextFunc} text={inputtedText} title={inputtedTitle} updateTitleFunc={updateTitleFunc} /> : <></>}
      {stepCount == 2 ? <Step2 nextStepFunc={nextStep} previousStepFunc={previousStep} updateVoiceFunc={updateVoiceFunc} voice={selectedVoice} text={inputtedText} updateFileNameFunc={updateFileNameFunc} /> : <></>}
      {stepCount == 3 ? <Step3 nextStepFunc={nextStep} previousStepFunc={previousStep} updateBackgroundVolume={updateBackgroundVolume} backgroundVolume={backgroundVolume} voice={selectedVoice} text={inputtedText} updateFileNameFunc={updateFileNameFunc} updateBackgroundTiming={updateBackgroundTiming} backgroundTiming={backgroundTiming} updateNotiSound={updateNotiSound} notiSound={notiSound} updateDistortion={updateDistortion} distortion={distortion} updateBackgroundType={updateBackgroundType} backgroundType={backgroundType} /> : <></>}
      {stepCount == 4 ? <Step4 nextStepFunc={nextStep} previousStepFunc={previousStep} voice={selectedVoice} text={inputtedText} fileName={fileName} /> : <></>}
      {stepCount == 5 ? <Step5 nextStepFunc={nextStep} previousStepFunc={previousStep} updatePlatformsFunc={updatePlatformsFunc} platforms={selectedPlatforms}/> : <></>}
      {stepCount == 6 ? <Step6 nextStepFunc={nextStep} previousStepFunc={previousStep} platforms={selectedPlatforms} fileName={fileName} title={inputtedTitle} /> : <></>}

    </>
  )
}
