//express for api
import express from 'express';
import cors from 'cors';
const app = express();
//use cors for cross origin problems, serve json and serve static files from the audio folder
app.use(cors(), express.json(),express.static('audio', {etag: false, maxAge: 1000}));
//env variables
import dotenv from 'dotenv'
dotenv.config(); //add post middleware
//schedule job
import schedule from 'node-schedule'
//make api calls with axios
import axios from 'axios'
//TelegramBot
import TeleBot from 'telebot'
import audiogeneration from './utils/audiogeneration.js';
import { synthesizeSpeech, synthesizeSpeechXML } from './Azure_API.js';

  app.get('/sendvoice', async function (req, res) {

    const bot = new TeleBot(process.env?.TelegramBotToken || "");
    //to get the channelID https://gist.github.com/mraaroncruz/e76d19f7d61d59419002db54030ebe35
    bot.sendVoice(process.env?.TelegramChannelID || "", "./audio/VettelAICongrats.mp3", {caption: "Sebastian Vettel congratulates Max Verstappen on his Monaco Grand Prix Victory."});

    res.send(`Voice is send in the Telegram channel`);
  });

  app.get('/mixaudio', async function (req, res) {

    await audiogeneration.generateCoolBoardRadioEffectWithDistortion('./audio/stock/apivoiceXML.mp3');

    res.send(`Audio mixed with ffmpeg`);
  });

  app.get('/createandsendradiomessage/:filename', async function (req, res) {

    const filename = req.params.filename;
    const bot = new TeleBot(process.env?.TelegramBotToken || "");

    await audiogeneration.generateCoolBoardRadioEffect(`./audio/stock/${filename}`).then(() => {
      bot.sendVoice(process.env?.TelegramChannelID || "", "./audio/speechWithCoolBoardRadioEffect.mp3", {caption: "This file is fully generated by code and didn't have any human interaction."});
      console.log("finished sending message");
    }).catch((err) => {console.log(err)});

    res.send(`radio message created and send via telegram.`);
  });

  app.get('/voicefile', async function (req, res) {
    // get text from query
    const textFromQuery = req.query.tts?.toString();
    console.log(textFromQuery);
    // const text=`Hey Valterri, it is James.Fuck you`;

    await synthesizeSpeechXML(textFromQuery);
    //await synthesizeSpeech("This is for all the kids out there that dream of the impossible!");
    
    res.send(`Voice is made and stored in a file`);
  });


  // Used for final prototype
  app.get('/createvoicefile', async function (req, res) {
      // get text from query
      const textFromQuery = req.query.tts?.toString();
      const voiceName = req.query.voice?.toString();

      if(voiceName == "Vettel" && textFromQuery == "Sebastian Vettel congratulates Max Verstappen on his Monaco Grand Prix Victory.")
      {
        res.send("VettelAICongrats.mp3")
      }
      else {
        await synthesizeSpeechXML(textFromQuery,voiceName).then(async() => {
          await audiogeneration.generateCoolBoardRadioEffect(`./audio/apivoice.mp3`).then(() => {
              res.send(`preview.mp3`);
          }).catch((err) => {
            console.log(err);
            res.status(500);
            res.send("Something went wrong trying to modify the audio file.")
          });
        }).catch((err) => {
          console.log(err);
          res.status(500);
          res.send("Something went wrong trying to create the audio file.")
        });
      }
  });

  app.post('/publishvoicetosocial', async function (req, res) {
    //array of platform names
      const fileName = req.body.filename?.toString();
      const platforms = req.body.platforms;

      if(platforms?.includes("Telegram"))
      {
        const bot = new TeleBot(process.env?.TelegramBotToken || "");
        //to get the channelID https://gist.github.com/mraaroncruz/e76d19f7d61d59419002db54030ebe35
        await bot.sendVoice(process.env?.TelegramChannelID || "", `./audio/${fileName}`, {caption: "News Flash⚡️ By RacingNews365 Tacotron🤖🌮."});
      }

      if(platforms?.includes("Twitter"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("Facebook"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("WhatsApp"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("Spotify"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("Snapchat"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("Youtube"))
      {
        //Do the Sharing via Social Platform API
      }

      if(platforms?.includes("Instagram"))
      {
        //Do the Sharing via Social Platform API
      }

      res.send("Voice file shared on socials")
  });

  //App listen
  const port = process.env?.PORT || 4001;
  app.listen(port, async() => {
    console.log(`Listening on port: ${port}`); 
  });

